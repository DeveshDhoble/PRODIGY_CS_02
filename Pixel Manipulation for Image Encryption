from PIL import Image

def encrypt_image(image_path, encryption_key):
    # Open the image
    img = Image.open(image_path)
    
    # Get the image size
    width, height = img.size
    
    # Encrypt each pixel
    encrypted_pixels = []
    for y in range(height):
        for x in range(width):
            # Get the RGB values of the pixel
            r, g, b = img.getpixel((x, y))
            
            # Apply encryption operation here, for example, XOR with encryption key
            encrypted_r = r ^ encryption_key
            encrypted_g = g ^ encryption_key
            encrypted_b = b ^ encryption_key
            
            # Append the encrypted pixel values
            encrypted_pixels.append((encrypted_r, encrypted_g, encrypted_b))
    
    # Create a new image with encrypted pixels
    encrypted_img = Image.new(img.mode, img.size)
    encrypted_img.putdata(encrypted_pixels)
    
    # Save the encrypted image
    encrypted_img.save("encrypted_image.png")
    
    print("Image encrypted successfully.")

def decrypt_image(image_path, encryption_key):
    # Open the encrypted image
    img = Image.open(image_path)
    
    # Get the image size
    width, height = img.size
    
    # Decrypt each pixel
    decrypted_pixels = []
    for y in range(height):
        for x in range(width):
            # Get the RGB values of the pixel
            r, g, b = img.getpixel((x, y))
            
            # Apply decryption operation here, which should be the inverse of the encryption operation
            decrypted_r = r ^ encryption_key
            decrypted_g = g ^ encryption_key
            decrypted_b = b ^ encryption_key
            
            # Append the decrypted pixel values
            decrypted_pixels.append((decrypted_r, decrypted_g, decrypted_b))
    
    # Create a new image with decrypted pixels
    decrypted_img = Image.new(img.mode, img.size)
    decrypted_img.putdata(decrypted_pixels)
    
    # Save the decrypted image
    decrypted_img.save("decrypted_image.png")
    
    print("Image decrypted successfully.")

# Example usage
image_path = "abc.png"
encryption_key = xyz  # You can change this key
encrypt_image(image_path, encryption_key)
decrypt_image("encrypted_image.png", encryption_key)
